name: Test & Deploy Azure Functions (Python)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

env:
  FUNCTIONAPP_DIR: "."         # change if your function app is in a subfolder
  PYTHON_VERSION: "3.12"       # match Azure Functions Python worker (your host shows 3.12)

concurrency:
  group: deploy-azure-func
  cancel-in-progress: true

jobs:
  # -------------------------
  # 1) TEST JOB (must pass)
  # -------------------------
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install runtime deps (venv)
        working-directory: ${{ env.FUNCTIONAPP_DIR }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "WARNING: requirements.txt not found; proceeding."
          fi

      - name: Install test deps
        working-directory: ${{ env.FUNCTIONAPP_DIR }}
        run: |
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            pip install pytest
          fi

      - name: Run tests (skip gracefully if none)
        working-directory: ${{ env.FUNCTIONAPP_DIR }}
        shell: bash
        run: |
          set -euo pipefail
          if compgen -G "tests/test_*.py" > /dev/null || compgen -G "*_test.py" > /dev/null; then
            pytest -q
          else
            echo "No tests found (tests/test_*.py or *_test.py). Skipping."
          fi

  # -------------------------
  # 2) DEPLOY JOB (after tests)
  # -------------------------
  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # IMPORTANT: do NOT prebuild .python_packages here.
      # Let Azure do a server-side (Oryx) build to get wheels compatible with the host.

      - name: Ensure run-from-package deployment
        run: echo "WEBSITE_RUN_FROM_PACKAGE=1" >> $GITHUB_ENV

      - name: Azure login (Service Principal)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Ensure Oryx server build is enabled on the app (idempotent)
      - name: Enable server-side (Oryx) build
        shell: bash
        run: |
          APP="${{ secrets.AZURE_FUNCTIONAPP_NAME }}"
          RG="$(az functionapp list --query "[?name=='${APP}'].resourceGroup" -o tsv)"
          az webapp config appsettings set -g "$RG" -n "$APP" \
            --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true

      - name: Deploy to Azure Functions (server build)
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.FUNCTIONAPP_DIR }}
          scm-do-build-during-deployment: true

      # Post-deploy sanity: print host + list discovered functions
      - name: Post-deploy sanity check (host + functions)
        shell: bash
        run: |
          set -euo pipefail
          APP="${{ secrets.AZURE_FUNCTIONAPP_NAME }}"
          RG="$(az functionapp list --query "[?name=='${APP}'].resourceGroup" -o tsv)"
          HOST="$(az functionapp show --name "${APP}" --resource-group "${RG}" --query "defaultHostName" -o tsv)"
          echo "Default domain: https://${HOST}"
          echo "Discovered functions:"
          az functionapp function list --name "${APP}" --resource-group "${RG}" -o table || echo "No functions listed (check function.json files)."
          echo "Try a function at: https://${HOST}/api/<your-function-name>"